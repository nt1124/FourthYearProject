\documentclass[a4paper,10pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{color}
\usepackage{graphicx}
\usepackage[margin=1.5in]{geometry}
\setcounter{tocdepth}{2}


\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}


\begin{document}

  \begin{titlepage}
    \begin{center}

      
    \textsc{\LARGE University of Bristol}
    \vspace{2cm}
    
    \includegraphics[width=0.15\textwidth]{./bristolunilogo}~\\[1cm]
    
    \textsc{\Large Background Chapter}
    
    \vspace{3cm}
    \HRule \\[0.4cm]
    \textsc{ \huge \bfseries Secure two party computation}
    \HRule \\[0.4cm]
    
    \vspace{5cm}
    \noindent\rule{12cm}{0.2pt}\\[0.2cm]
    \textsc{\Large Author: Nicholas Tutte (nt1124)}\\[0.2cm]
    \textsc{\Large Supervisor: Prof. Nigel Smart}
    
    \end{center}
  \end{titlepage}
  
  \begin{abstract}
    
  \end{abstract}

  \section{Background Chapter}
    \subsection{Problem definition} \label{InformalProbDef}
      Secure multi-party computation(SMPC) is a fundamental problem in Cryptography. We have a set of parties who wish to cooperate to compute some function on inputs distributed across the parties. However, these parties distrust one another and do not wish their inputs to be known to the other parties. We shall be focusing on the case where there are only two parties(S2PC), but most two party approaches can be generalised to the multi-party case.\\
      
      A commonly used example is the Millionaires problem. A group of rich persons wish to find out who among them is the richest, but do not wish to tell each other how much they are worth. Here the parties are the rich (and somewhat vain) individuals. Their inputs are their net worths and the function will return the identifier of the individual with the highest input. Finally no party should be able to divine anything about anothers inputs, apart from what the can infer from their own input and the output.\\
      
      So for example Whilst this is not exactly an inspiring application, it does explain convey the problem concisely. We shall cover further applications later in \ref{Applications}.\\

      Throughout we will assume that we can establish a secure and authenticated channel of communication to all other parties in the computation. That is we assume communications between two parties cannot be eavesdropped upon or altered, and that we can detect attempts to impersonate another party.

    \subsection{Formal ideal model}
      Formally speaking any solution developed to the problem of secure two party computation should be equivalent to the following model, which we refer to as the \emph{ideal}.\\

      The obvious solution to our problem would be to find an external individual, trusted by both parties. Such a trusted individual could receive the inputs from each party, compute the function and then inform both parties of the output of the function.\\

      This model is held up as the ideal to which any SMPC protocol should aspire to, both in terms of functionality and in terms of security.
	
    \subsection{Security levels}
	
    \subsection{Applications} \label{Applications}
    
    \subsection{Yao Garbled Circuits} \label{Yao_Introduction}
    
    \subsection{Oblivious Transfer} \label{OT_Intro}

  
\end{document}
